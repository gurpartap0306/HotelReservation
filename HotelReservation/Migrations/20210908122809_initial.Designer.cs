// <auto-generated />
using System;
using HotelReservation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelReservation.Migrations
{
    [DbContext(typeof(hotelContext))]
    [Migration("20210908122809_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelReservation.Models.AvailableHotelRoom1", b =>
                {
                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("AvailRoom")
                        .HasColumnType("int");

                    b.HasKey("HotelId", "Type", "Date");

                    b.ToTable("AvailableHotelRoom1");
                });

            modelBuilder.Entity("HotelReservation.Models.Bookings1", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cid")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int");

                    b.Property<int>("Hid")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("Cid");

                    b.HasIndex("Hid");

                    b.HasIndex("Uid");

                    b.ToTable("Bookings1");
                });

            modelBuilder.Entity("HotelReservation.Models.Customer1", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StreetNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer1");
                });

            modelBuilder.Entity("HotelReservation.Models.Hotel1", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HotelId");

                    b.ToTable("Hotel1");
                });

            modelBuilder.Entity("HotelReservation.Models.Room1", b =>
                {
                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxGuest")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Rid");

                    b.HasIndex("BookingId");

                    b.ToTable("Room1");
                });

            modelBuilder.Entity("HotelReservation.Models.Transaction1", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("Paymethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionId");

                    b.HasIndex("BookingId");

                    b.ToTable("Transaction1");
                });

            modelBuilder.Entity("HotelReservation.Models.Users1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(2560)
                        .HasColumnType("nvarchar(2560)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users1");
                });

            modelBuilder.Entity("HotelReservation.Models.AvailableHotelRoom1", b =>
                {
                    b.HasOne("HotelReservation.Models.Hotel1", "Hotel")
                        .WithMany("AvailableHotelRoom1s")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK__Available__Hotel__151B244E")
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelReservation.Models.Bookings1", b =>
                {
                    b.HasOne("HotelReservation.Models.Customer1", "CidNavigation")
                        .WithMany("Bookings1s")
                        .HasForeignKey("Cid")
                        .HasConstraintName("FK__Bookings1__Cid__18EBB532")
                        .IsRequired();

                    b.HasOne("HotelReservation.Models.Hotel1", "HidNavigation")
                        .WithMany("Bookings1s")
                        .HasForeignKey("Hid")
                        .HasConstraintName("FK__Bookings1__Hid__1F98B2C1")
                        .IsRequired();

                    b.HasOne("HotelReservation.Models.Users1", "UidNavigation")
                        .WithMany("Bookings1s")
                        .HasForeignKey("Uid")
                        .HasConstraintName("FK__Bookings1__Uid__1EA48E88")
                        .IsRequired();

                    b.Navigation("CidNavigation");

                    b.Navigation("HidNavigation");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("HotelReservation.Models.Room1", b =>
                {
                    b.HasOne("HotelReservation.Models.Bookings1", "Booking")
                        .WithMany("Room1s")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Room1__BookingId__160F4887")
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HotelReservation.Models.Transaction1", b =>
                {
                    b.HasOne("HotelReservation.Models.Bookings1", "Booking")
                        .WithMany("Transaction1s")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Transacti__Booki__1332DBDC")
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HotelReservation.Models.Bookings1", b =>
                {
                    b.Navigation("Room1s");

                    b.Navigation("Transaction1s");
                });

            modelBuilder.Entity("HotelReservation.Models.Customer1", b =>
                {
                    b.Navigation("Bookings1s");
                });

            modelBuilder.Entity("HotelReservation.Models.Hotel1", b =>
                {
                    b.Navigation("AvailableHotelRoom1s");

                    b.Navigation("Bookings1s");
                });

            modelBuilder.Entity("HotelReservation.Models.Users1", b =>
                {
                    b.Navigation("Bookings1s");
                });
#pragma warning restore 612, 618
        }
    }
}
